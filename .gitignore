# Rust build artifacts
/target

# IDE/Editor settings
/.idea/
/.vscode/
*.iml

# OS-specific files
.DS_Store
Thumbs.db
desktop.ini

# Environment files (keep the template tracked)
.env
.env.*
!.env.template

# Logs
*.log

# Generated by dx-cli (avoid committing generated artifacts)
/docker-compose.yml
/docker-compose.yaml
/docker-compose.override.yml
/analyzer-report*.md

# Test projects: ignore common build/output folders across stacks
# Java / JVM
test-projects/**/.gradle
test-projects/**/build
test-projects/**/.m2
# Maven/Gradle also produce target/build; target covered below

# Node.js
test-projects/**/node_modules

test-projects/**/dist

# PHP (Composer)
test-projects/**/vendor

# Python
test-projects/**/.venv
test-projects/**/venv
test-projects/**/__pycache__
test-projects/**/.pytest_cache
test-projects/**/.tox

# Go
test-projects/**/bin

# Rust sample projects under test-projects
test-projects/**/target

# Coverage
coverage/
test-projects/**/coverage

# Editor/IDE inside test projects too
test-projects/**/.idea
test-projects/**/.vscode

# dx-cli working directories and generated compose in test projects
test-projects/**/.dx
test-projects/**/docker-compose.yml
test-projects/**/docker-compose.yaml
test-projects/**/docker-compose.override.yml
.dx
